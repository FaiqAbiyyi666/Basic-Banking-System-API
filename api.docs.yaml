openapi: 3.0.1 ### versi API
info: 
  title: Banking System API ###judul api ### wajib diisi
  description: API basic banking system
  version: 1.0.0 ### wajib diisi
  contact:
    email: abiyyiaja@gmail.com
servers:
  - url: http://localhost:3000/api/v1
paths:
  /users:
    post:
      summary: Register new user 
      description: Mendaftarkan user baru ke dalam database
      requestBody:
        $ref: "#/components/requestBodies/Register"
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/user"
                  - type: object
                    properties:
                      password:
                        type: string
                        example: 123456
        400: 
          description: Duplicate email
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email or Identity Number already used!
    get:
      summary: Get all users 
      parameters:
        - schema:
            type: string
          name: search
          in: query
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK 
                  data:
                    type: array
                    items: 
                      allOf:
                        - $ref: "#/components/schemas/user"
                        - type: object
                          properties:
                            password:
                              type: string
                              example: 123456
  /users/{user_id}:
    parameters:
      - schema:
          type: integer
        name: user_id
        in: path
        required: true
    get:
      summary: Get detail user by id
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK 
                  data:
                    allOf:
                      - $ref: "#/components/schemas/user"
                      - type: object
                        properties:
                          password:
                            type: string
                            example: 123456 
        400:
          description: Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Can't find user with id
components:
  schemas:
    user: 
      title: User 
      type: object
      properties:
        id: 
          type: integer
          example: 5
        name: 
          type: string
          example: bagus
        email:  
          type: string
          example: bagus@gmail.com
        profile:
          type: object 
          properties:
            id: 
              type: integer
              example: 5
            identity_type: 
              type: string
              example: ktp
            identity_number:  
              type: string
              example: 111222000333
            address: 
              type: string
              example: Sidoarjo
            user_id: 
              type: integer
              example: 5
    account:
      title: Account
      type: object
      properties:
        id: 
          type: integer
          example: 5
        bank_name: 
          type: string
          example: BCA
        bank_account_number:  
          type: string
          example: 111222000333
        balance: 
          type: integer
          example: 120000
        user_id:
          type: integer 
          example: 5
  requestBodies:
    Register:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: bagus
              email:
                type: string
                example: bagus@gmail.com
              password:
                type: string
                example: 123456
              identity_type:
                type: string
                example: ktp
              identity_number:
                type: string
                example: 111222000333
              address:
                type: string
                example: Sidoarjo 
            
